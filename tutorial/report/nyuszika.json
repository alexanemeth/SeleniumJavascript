{
  "stats": {
    "suites": 2,
    "tests": 3,
    "passes": 2,
    "pending": 0,
    "failures": 1,
    "start": "2022-03-11T14:12:42.171Z",
    "end": "2022-03-11T14:12:47.046Z",
    "duration": 4875,
    "testsRegistered": 3,
    "passPercent": 66.66666666666666,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "8137c0e3-5034-4f56-b264-2656a8575d82",
      "title": "",
      "fullFile": "",
      "file": "",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "1f2ddbae-d552-437b-ad77-4bc7701816ab",
          "title": "add todo tests",
          "fullFile": "D:\\Projektek\\SeleniumJavascript\\tutorial\\start.js",
          "file": "\\start.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "successfully adds a todo to application",
              "fullTitle": "add todo tests successfully adds a todo to application",
              "timedOut": null,
              "duration": 4126,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "//launch the browser\nlet driver = await new Builder().forBrowser(\"chrome\").build();\n//navigate to our application\nawait driver.get(\"https://lambdatest.github.io/sample-todo-app/\");\n//add a todo\nawait driver\n  .findElement(By.id(\"sampletodotext\"))\n  .sendKeys(\"Learn Selenium\", Key.RETURN);\n//assert\nlet todoText = await driver.findElement(By.xpath(\"//li[last()]\")).getText();\n//assert using chai should\ntodoText.should.equal(\"Learn Selenium\");\n//close the browser\nawait driver.quit();",
              "err": {},
              "uuid": "4d9d2fd5-54af-459c-9f2c-05923cc84929",
              "parentUUID": null,
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "4d9d2fd5-54af-459c-9f2c-05923cc84929"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 4126,
          "root": false,
          "rootEmpty": false,
          "_timeout": null
        },
        {
          "uuid": "a759d788-2a3e-4d82-9882-78035e5820a4",
          "title": "add todo tests2",
          "fullFile": "D:\\Projektek\\SeleniumJavascript\\tutorial\\start2.js",
          "file": "\\start2.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "successfully adds a todo to application2",
              "fullTitle": "add todo tests2 successfully adds a todo to application2",
              "timedOut": null,
              "duration": 4045,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "//launch the browser\nlet driver = await new Builder().forBrowser(\"chrome\").build();\n//navigate to our application\nawait driver.get(\"https://lambdatest.github.io/sample-todo-app/\");\n//add a todo\nawait driver\n  .findElement(By.id(\"sampletodotext\"))\n  .sendKeys(\"Learn Selenium\", Key.RETURN);\n//assert\nlet todoText = await driver.findElement(By.xpath(\"//li[last()]\")).getText();\n//assert using chai should\ntodoText.should.equal(\"Learn Selenium\");\n//close the browser\nawait driver.quit();",
              "err": {},
              "uuid": "9cf36123-013a-486b-8331-9483d5082431",
              "parentUUID": null,
              "isHook": false,
              "skipped": false
            },
            {
              "title": "successfully adds another todo to application2",
              "fullTitle": "add todo tests2 successfully adds another todo to application2",
              "timedOut": null,
              "duration": 157,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "//launch the browser\nlet driver = await new Builder().forBrowser(\"chrome\").build();\n//navigate to our application\nawait driver.get(\"https://lambdatest.github.io/sample-todo-app/\");\n//add a todo\nawait driver\n  .findElement(By.id(\"sampletodotext\"))\n  .sendKeys(\"Learn Selenium\", Key.RETURN);\n//assert\nlet todoText = await driver.findElement(By.xpath(\"//li[last()]\")).getText();\n//assert using chai should\ntodoText.should.equal(\"Learn JavaScript\");\n//close the browser\nawait driver.quit();",
              "err": {
                "message": "Error: Server terminated early with status 1",
                "estack": "Error: Server terminated early with status 1\n    at D:\\Projektek\\SeleniumJavascript\\tutorial\\node_modules\\selenium-webdriver\\remote\\index.js:248:24\n    at processTicksAndRejections (internal/process/task_queues.js:95:5)",
                "diff": null
              },
              "uuid": "e6d80130-04d7-48c5-a08f-af18bfd67403",
              "parentUUID": null,
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "9cf36123-013a-486b-8331-9483d5082431"
          ],
          "failures": [
            "e6d80130-04d7-48c5-a08f-af18bfd67403"
          ],
          "pending": [],
          "skipped": [],
          "duration": 4202,
          "root": false,
          "rootEmpty": false,
          "_timeout": null
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 0
    }
  ],
  "meta": {
    "mocha": {
      "version": "9.2.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "nyuszika",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.2"
    },
    "marge": {
      "options": {
        "reportDir": "./report",
        "reportFilename": "nyuszika"
      },
      "version": "6.1.1"
    }
  }
}